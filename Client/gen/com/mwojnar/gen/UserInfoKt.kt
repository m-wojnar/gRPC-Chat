//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: proto/chat.proto

package com.mwojnar.gen;

@kotlin.jvm.JvmSynthetic
public inline fun userInfo(block: UserInfoKt.Dsl.() -> kotlin.Unit): UserInfo =
  UserInfoKt.Dsl._create(UserInfo.newBuilder()).apply { block() }._build()
public object UserInfoKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: UserInfo.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: UserInfo.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): UserInfo = _builder.build()

    /**
     * <code>optional uint64 userId = 1;</code>
     */
    public var userId: kotlin.Long
      @JvmName("getUserId")
      get() = _builder.getUserId()
      @JvmName("setUserId")
      set(value) {
        _builder.setUserId(value)
      }
    /**
     * <code>optional uint64 userId = 1;</code>
     */
    public fun clearUserId() {
      _builder.clearUserId()
    }
    /**
     * <code>optional uint64 userId = 1;</code>
     * @return Whether the userId field is set.
     */
    public fun hasUserId(): kotlin.Boolean {
      return _builder.hasUserId()
    }

    /**
     * <code>optional uint64 groupId = 2;</code>
     */
    public var groupId: kotlin.Long
      @JvmName("getGroupId")
      get() = _builder.getGroupId()
      @JvmName("setGroupId")
      set(value) {
        _builder.setGroupId(value)
      }
    /**
     * <code>optional uint64 groupId = 2;</code>
     */
    public fun clearGroupId() {
      _builder.clearGroupId()
    }
    /**
     * <code>optional uint64 groupId = 2;</code>
     * @return Whether the groupId field is set.
     */
    public fun hasGroupId(): kotlin.Boolean {
      return _builder.hasGroupId()
    }

    /**
     * <code>optional uint64 ackId = 3;</code>
     */
    public var ackId: kotlin.Long
      @JvmName("getAckId")
      get() = _builder.getAckId()
      @JvmName("setAckId")
      set(value) {
        _builder.setAckId(value)
      }
    /**
     * <code>optional uint64 ackId = 3;</code>
     */
    public fun clearAckId() {
      _builder.clearAckId()
    }
    /**
     * <code>optional uint64 ackId = 3;</code>
     * @return Whether the ackId field is set.
     */
    public fun hasAckId(): kotlin.Boolean {
      return _builder.hasAckId()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun UserInfo.copy(block: UserInfoKt.Dsl.() -> kotlin.Unit): UserInfo =
  UserInfoKt.Dsl._create(this.toBuilder()).apply { block() }._build()
